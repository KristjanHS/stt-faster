name: CodeQL

permissions:
  contents: read
  security-events: write

on:
  pull_request:
  # Run on all PRs regardless of branch to cover Renovate updates
  # (branch protection should require this check)
  schedule:
    - cron: "0 2 * * 1" # weekly, Mon 02:00 UTC
  workflow_dispatch: {} # Allow manual triggering

jobs:
  codeql:
    name: CodeQL
    runs-on: ubuntu-latest

    # Add timeout to prevent hanging jobs
    timeout-minutes: 360

    if: ${{ github.actor != 'nektos/act' }}
    # Use concurrency to cancel in-progress jobs on new commits
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        language: ['python']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
          # Skip upload under Act and forked PRs; still produce SARIF locally
          upload: >-
            ${{ github.actor != 'nektos/act' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false) }} #magic___^_^___line
          # CodeQL analysis complete
          # Security findings are available in GitHub's Security tab

  local_codeql:
    name: Local CodeQL Scan (isolated env)
    if: ${{ github.actor == 'nektos/act' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Download and cache CodeQL CLI
        run: |
          if [[ ! -x "${HOME}/codeql-cli/codeql/codeql" ]]; then
            CODEQL_VERSION="2.18.2"
            echo "Downloading CodeQL CLI v${CODEQL_VERSION}..."
            wget -q "https://github.com/github/codeql-cli-binaries/releases/download/v${CODEQL_VERSION}/codeql-linux64.zip" -O /tmp/codeql.zip
            mkdir -p "${HOME}/codeql-cli"
            unzip -q /tmp/codeql.zip -d "${HOME}/codeql-cli"
            rm /tmp/codeql.zip
          else
            echo "Using cached CodeQL CLI."
          fi
          echo "${HOME}/codeql-cli/codeql" >> "$GITHUB_PATH"

      - name: Download CodeQL Python query pack
        run: codeql pack download codeql/python-queries

      - name: Run CodeQL Analysis
        run: |
          DB_PATH="${RUNNER_TEMP}/codeql-db"
          SARIF_PATH="${RUNNER_TEMP}/codeql_local.sarif"
          echo "SARIF_PATH=${SARIF_PATH}" >> "$GITHUB_ENV"
          # Clean up previous database
          rm -rf "${DB_PATH}"
          # Create database
          codeql database create --language=python "${DB_PATH}"
          # Analyze database
          codeql database analyze "${DB_PATH}" --format=sarif-latest \
            --output="${SARIF_PATH}" codeql/python-queries

      # Local CodeQL scan complete
      # For production scans, check GitHub's Security tab

      - name: Quick local summary
        if: ${{ always() }}
        run: |
          if [ -n "$SARIF_PATH" ] && [ -f "$SARIF_PATH" ]; then
            echo "Local CodeQL scan complete. Check $SARIF_PATH for details."
            echo "For production results, see GitHub's Security tab."
          fi
