{
    // Tell the Python extension which interpreter to load first
    "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
    // make the integrated terminal activate the same venv
    "terminal.integrated.env.linux": {
        "VIRTUAL_ENV": "${workspaceFolder}/.venv",
        // commented out to see if default .venv python works
        //"PATH": "${workspaceFolder}/.tools:${env:PATH}",
        "PATH": "${workspaceFolder}/.venv/bin:${env:PATH}",
        "PYTHONHOME": "",
        "PYTHONPATH": ""
    },
    "workbench.editorAssociations": {
        "*.mdc": "default"
    },
    "files.exclude": {
        "**/.venv": true
    },
    "search.exclude": {
        "**/.venv": true
    },
    "python.languageServer": "None",
    "python.formatting.provider": "none",
    // Don't set this if you're just using a single .venv within your project.
    //"python.venvPath": "${workspaceFolder}",
    "python.envFile": "${workspaceFolder}/.env",
    "editor.formatOnSave": true,
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.fixAll.ruff": "always",
            "source.organizeImports.ruff": "always"
        }
    },
    "ruff.lint.enable": true,
    "ruff.fixOnSave": true,
    "ruff.organizeImports": true,
    "ruff.lineLength": 120,
    "ruff.fixAll": true,
    "githubPullRequests.ignoredPullRequestBranches": [
        "main"
    ],
    // Test notification settings
    "python.testing.pytestEnabled": true,
    "python.testing.pytestArgs": [
        "tests"
    ],
    "python.testing.unittestEnabled": false,
    "python.testing.nosetestsEnabled": false,
    "python.testing.autoTestDiscoverOnSaveEnabled": true,
    "python.testing.pytestPath": "${workspaceFolder}/.venv/bin/pytest",
    // Gemini Code Assist settings
    "geminicodeassist.inlineSuggestions.enableAuto": false,
    "geminicodeassist.chat.defaultDiffLayout": "Side by side diff",
    "geminicodeassist.chat.defaultCodeBlockDisplay": "Expanded",
    // Auto-run tests on save (optional - can be disabled if too noisy)
    "python.testing.autoTestDiscoverOnSaveEnabled": false,
    // Notification settings
    "terminal.integrated.bellDuration": 1000,
    "accessibility.signals.terminalBell": {
        "sound": "on"
    },
    "terminal.integrated.enableVisualBell": true
}