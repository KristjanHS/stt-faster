repos:
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.9
    hooks:
      - id: ruff
        args:
          - --fix
        name: "Ruff - Fix linting errors"
        description: "Automatically fix fixable linting errors like removing unused imports"
      - id: ruff-format
        name: "Ruff - Format code"
        description: "Reformat all files according to the rules in pyproject.toml"

  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.405
    hooks:
      - id: pyright
        name: "Pyright - Static type checking"
        description: "Static type checking for Python code"
        # Ensure pyright analyzes against the project venv's interpreter
        args:
          - --pythonpath
          - .venv/bin/python
          - --project
          - pyrightconfig.json
        files: ^backend/.*\.py$

  - repo: https://github.com/google/yamlfmt
    rev: v0.17.2
    hooks:
      - id: yamlfmt
        name: "Format YAML files"
        description: "Uses yamlfmt to format YAML files to a standard style."
        entry: yamlfmt
        language: golang
        types:
          - yaml

  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7
    hooks:
      - id: actionlint
        name: "Actionlint - GitHub Actions validation"
        description: "Lint GitHub Actions workflow files for syntax and best practices"
        args:
          - -color
        files: ^\.github/workflows/.*\.(yaml|yml)$
        types: [yaml]
        exclude: |
          (?x)^(
              \.venv/|
              \.git/|
              node_modules/|
              __pycache__/|
              \.pytest_cache/|
              \.ruff_cache/|
              dist/|
              build/|
              \.mypy_cache/|
              \.coverage|
              \.secrets\.baseline
          )$

  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        name: "Hadolint - Dockerfile validation"
        description: "Lint Dockerfiles for best practices and common mistakes"
        args:
          - --format
          - sarif
        files: ^(Dockerfile|.*\.dockerfile|docker/.*\.Dockerfile)$
        types: [dockerfile]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        name: "Bandit - Python security linter"
        description: "Scan for common security issues in Python code"
        args:
          - "-c"
          - "pyproject.toml"
          - "-x"
          - "tests/"
        additional_dependencies: ["bandit[toml]"]

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: "Detect secrets"
        description: "Scan for secrets and credentials in the codebase"
        exclude: |
          (?x)^(
              \.venv/|
              \.git/|
              node_modules/|
              __pycache__/|
              \.pytest_cache/|
              \.ruff_cache/|
              dist/|
              build/|
              \.mypy_cache/|
              \.coverage|
              \.secrets\.baseline
          )$
        additional_dependencies:
          - detect-secrets[gibberish]
